name: Go

on:
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Create Release
    if: "startsWith(github.event.head_commit.message, 'v')"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        # List of GOOS and GOARCH pairs from `go tool dist list`
        goosarch:
          - "windows/amd64"
          # etc
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          ENDING=win.exe          
          BINARY_NAME=${{github.repository}}-${{github.event.head_commit.message}}--$ENDING
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Build
        run: |
          env GO111MODULE=on go build -o "$BINARY_NAME" -v -ldflags -H=windowsgui
      - name: Release Notes
        run: git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * by %an' --no-merges >> ".github/RELEASE-TEMPLATE.md"
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{github.event.head_commit.message}}',
              sha: context.sha
            })
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          body_path: ".github/RELEASE-TEMPLATE.md"
          tag_name: ${{github.event.head_commit.message}}
          draft: true
          files: ${{env.BINARY_NAME}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
